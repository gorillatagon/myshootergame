import pygame
import sys
import random  # Import the random module

# Initialize Pygame
pygame.init()

# Constants
SCREEN_WIDTH = 800
SCREEN_HEIGHT = 600
PLAYER_SIZE = 50
PLAYER_SPEED = 5
BULLET_SIZE = 10
BULLET_SPEED = 10
ENEMY_SIZE = 50
ENEMY_SPEED = 2

# Colors
WHITE = (255, 255, 255)
RED = (255, 0, 0)

# Create the screen
screen = pygame.display.set_mode((SCREEN_WIDTH, SCREEN_HEIGHT))
pygame.display.set_caption("2D Shooter")

# Player
player = pygame.Rect(SCREEN_WIDTH // 2 - PLAYER_SIZE // 2, SCREEN_HEIGHT - PLAYER_SIZE, PLAYER_SIZE, PLAYER_SIZE)

# Bullets
bullets = []

# Enemies
enemies = []

# Game loop
while True:
    for event in pygame.event.get():
        if event.type == pygame.QUIT:
            pygame.quit()
            sys.exit()

    # Move the player
    keys = pygame.key.get_pressed()
    if keys[pygame.K_LEFT] and player.left > 0:
        player.x -= PLAYER_SPEED
    if keys[pygame.K_RIGHT] and player.right < SCREEN_WIDTH:
        player.x += PLAYER_SPEED

    # Shoot bullets
    if keys[pygame.K_SPACE]:
        bullet = pygame.Rect(player.centerx - BULLET_SIZE // 2, player.top - BULLET_SIZE, BULLET_SIZE, BULLET_SIZE)
        bullets.append(bullet)

    # Move bullets
    bullets = [bullet for bullet in bullets if bullet.top > 0]
    for bullet in bullets:
        bullet.y -= BULLET_SPEED

    # Spawn enemies
    if len(enemies) < 5:
        enemy = pygame.Rect(random.randint(0, SCREEN_WIDTH - ENEMY_SIZE), 0, ENEMY_SIZE, ENEMY_SIZE)
        enemies.append(enemy)

    # Move enemies
    for enemy in enemies:
        enemy.y += ENEMY_SPEED

    # Collision detection
    for bullet in bullets:
        for enemy in enemies:
            if bullet.colliderect(enemy):
                bullets.remove(bullet)
                enemies.remove(enemy)

    # Draw everything
    screen.fill(WHITE)
    pygame.draw.rect(screen, RED, player)
    for bullet in bullets:
        pygame.draw.rect(screen, RED, bullet)
    for enemy in enemies:
        pygame.draw.rect(screen, RED, enemy)

    pygame.display.flip()

    # Game over condition
    for enemy in enemies:
        if enemy.colliderect(player):
            pygame.quit()
            sys.exit()

    pygame.time.delay(30)
